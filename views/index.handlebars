
<h1>Proxies</h1>

<div class="links">
  <a href="/renew">Renew Proxies</a>
  <a href="/export">Export Proxies</a>
  <a href="/expire">Expire Proxies</a>
</div>

<form>
  <input type="text" name="search" id="search" placeholder="Search for proxies" />
</form>

<table id="proxies" border="1"></table>

<div class="buttons">
  <button class="btn" id="prev">Previous page</button>
  <button class="btn" id="next">Next page</button>
</div>

<script>
  // Search function
  let page = 1

  const search = document.getElementById("search")
  search.addEventListener('keyup', () => {
    page = 1
    loadProxies(search.value)
  })

  // For pagination, always start at page 0

  // Event listeners for pagination
  document.getElementById("next").addEventListener("click", () => {
    page++
    loadProxies(search.value)
  })

  document.getElementById("prev").addEventListener("click", () => {
    if (page > 1) {
      page--
    }

    loadProxies(search.value)
  })

  

  // For rendering the proxy data to the frontend
  const reset = (ip) => {
    fetch(`/api/proxies`, {
      method: 'POST',
      body: JSON.stringify([ ip ]),
      headers: {
        'content-type': 'application/json'
      }
    }).then(res => {
      console.log(search.value)
      loadProxies(search.value)
    })
  }

  const loadProxies = (query = false) => {
    let path = '/api/proxies'
    if (query) {
      path += `/${query}`
    }

    // Append pagination
    path += `?page=${page}`
    
    fetch(path).then(res => res.json()).then(proxies => {
      const table = document.getElementById("proxies")
      
      table.innerHTML = `<tr>
        <th><input type="checkbox" name="proxy" /></th>
        <th>Proxy</th>
        <th>Last updated</th>
        <th>Server</th>
        <th>Actions</th>
      </tr>`

      for (const proxy of proxies) {
        console.log(`Expired? ${proxy.expired}`)
        table.innerHTML += `<tr>
            <td><input type="checkbox" name="proxy" /></td>
            <td>${proxy.ip}:${proxy.port}:${proxy.user}:${proxy.pass}</td>
            <td class="${proxy.expired ? 'expired' : ''}">${proxy.updated_at}</td>
            <td>${proxy.server}</td>
            <td><button class="reset" onclick="reset('${proxy.ip}')">Reset</button></td>
          </tr>`
      }
    })
  }

  window.onload = () => {
    loadProxies()
  }
</script>